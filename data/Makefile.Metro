DB = -d tiger

database: db_dev_drop db_dev_create db_lines db_group_union

db_dev_drop:
	psql -c "DROP DATABASE IF EXISTS tiger"

db_stage_drop:
	heroku pg:reset --confirm findlines-staging DATABASE_URL

db_dev_create:
	psql -c "CREATE DATABASE tiger"
	psql $(DB) -c "CREATE EXTENSION postgis;"

db_group_union:
	cat data/union_group_metro.sql | sed -e "s/placename/portland/" | psql $(DB) -a

lines/portland.osm2pgsql-shapefiles.zip:
	wget -P lines/ http://osm-extracted-metros.s3.amazonaws.com/portland.osm2pgsql-shapefiles.zip

lines/portland-osm-line.shp: lines/portland.osm2pgsql-shapefiles.zip
	unzip -d lines/ lines/portland.osm2pgsql-shapefiles.zip

lines/portland.sql: lines/portland-osm-line.shp
	ogr2ogr -f "ESRI Shapefile" -dialect SQLite -sql "SELECT name FROM 'portland.osm-line'" lines/portland.shp lines/portland.osm-line.shp -lco ENCODING=UTF-8
	mv lines/portland.dbf lines/portland.osm-line.dbf
	shp2pgsql -D -W "LATIN1" -s 4326 lines/portland.osm-line.shp portland > lines/portland.sql

db_lines: lines/portland.sql
	psql $(DB) -q -f lines/portland.sql